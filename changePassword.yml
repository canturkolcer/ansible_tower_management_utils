---
- name: Create Tunnels and prepare host
  hosts: localhost
  gather_facts: false

  vars:
    account_code: "{{ blueid_shortcode }}"
    trans_num: "{{ tower_job_id }}"
    acc_id: "{{ account_code }}"
    transaction_id: "{{ trans_num }}"

  tasks:
  
  - name: Tunnel setup
    include_role:
     name: ansible-role-event-socks-tunnel   

- name: Change password on Endpoint for hashicorp vault
  hosts: all
  serial: 10
  strategy: free
  gather_facts: false
  ignore_errors: true
  ignore_unreachable: true

  vars:
    account_code: "{{ blueid_shortcode }}"
    trans_num: "{{ tower_job_id }}"
    acc_id: "{{ account_code }}"
    transaction_id: "{{ trans_num }}"
        
    username: "{{ hostvars[inventory_hostname]['ansible_user'] }}"
    default_password: "{{ lookup('env', ostype ~ '_password') }}"

    hashicorp_url: "{{ lookup('env','hashicorp_url') }}"
    hashicorp_token: "{{ lookup('env','hashicorp_token') }}"
    url: "{{ hashicorp_url }}/data/{{ ostype }}/{{ fqdn }}"


  tasks:

    - name: Get Hashicorp credentials
      uri:
        url: "{{ url }}"
        validate_certs: "no"
        method: "GET"
        headers:
          X-Vault-Token: "{{ hashicorp_token }}"
          Content-Type: "application/json"
          X-Vault-Request: "true"
      register: hashicorp_data
      delegate_to: localhost
      no_log: true


    - name: Set Default password if hashicorp does not have it
      block:
        - name: set hashicorp variables
          set_fact:
            query:
              data:
                username: "{{ username }}"
                password: "{{ default_password }}"

        - name: call Hahicorp API - Set initial credentials
          uri:
            url: "{{ url }}"
            validate_certs: "no"
            method: POST
            headers:
              X-Vault-Token: "{{ hashicorp_token }}"
              Content-Type: "application/json"
              X-Vault-Request: "true"
            body_format: json
            body: "{{ query }}"

        - name: Set current password to default
          set_fact:
            hashicorp_data:
              json:
                data:
                  data:
                    password: "{{ default_password }}"
      when: hashicorp_data is defined and hashicorp_data.status == 404 
      delegate_to: localhost
      no_log: true

    - name: Try ping with become
      import_tasks: pingRoot.yaml 

    - name: Password change block
      block:
        - name: 'Setup password and new_password'
          set_fact:
            password: "{{ hashicorp_data.json.data.data.password }}"
            new_password: "{{ lookup('password','/dev/null chars=digits,ascii_letters length=20') }}"
          no_log: true

        - name: 'Change password on linux endpoint'
          user:
            name: "{{ username }}"
            password: "{{ new_password|password_hash('sha512') }}"
          when: ostype == 'linux'
          register: linux_user_status
          become: True
          become_user: root
          no_log: true
          
        - name: 'Change password on aix endpoint'
          shell: "echo {{ username }}:{{ new_password }} | chpasswd"
          when: ostype == 'aix'
          register: aix_user_status
          become: True
          become_user: root
          no_log: true          

        - name: 'Set pwd change at first logon flag to false'
          shell: "pwdadm -c {{ username }}"
          when: ostype == 'aix'
          register: pwdadm_status
          become: True
          become_user: root
          no_log: true
          
        - name: 'Change password on windows endpoint'
          win_user:
            name: "{{ username }}"
            password: "{{ new_password }}"
          when: ostype == 'windows'
          register: windows_user_status 
          no_log: true
          
        - name: 'Update hasicorp with new password'
          block:
            - name: Set fact for new password
              set_fact:
                password: "{{ new_password }}"
              when: (aix_user_status.changed|default(false)|bool or linux_user_status.changed|default(false)|bool or windows_user_status.changed|default(false)|bool)
              no_log: true

            - name: 'set variables'
              set_fact:
                query:
                  data:
                    username: "{{ username }}"
                    password: "{{ password }}"

            - name: 'call API - update credentials'
              uri:
                url: "{{ url }}"
                validate_certs: "no"
                method: POST
                headers:
                  X-Vault-Token: "{{ hashicorp_token }}"
                  Content-Type: "application/json"
                  X-Vault-Request: "true"
                body_format: json
                body: "{{ query }}"
          delegate_to: localhost

      when: ping_result is defined and ping_result == "pong"

    - name: Try ping with become
      import_tasks: pingRoot.yaml 

...     
